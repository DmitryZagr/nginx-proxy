-Djetty.home.bundle=org.eclipse.jetty.osgi.boot
-Dorg.eclipse.jetty.servlet.Default.dirAllowed=false
-Djetty.port=9090


http://forums.ni.com/t5/LabVIEW/SPI-communication-with-93LC46-EEPROM/td-p/3155844

/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/JavaVM.framework

Tp3791

http://newsruss.ru/doc/index.php/Связь_в_России
http://www.tradingeconomics.com/united-states/gdp-from-transport

588

SELECT idThread  ,  COUNT(thread) as cnt FROM forum.Thread left join  forum.post 
on idThread = thread
group by thread12345678

http://vykhovanets.ru/course49/12345678

mysql -u root -p 123

window.open("https://habrahabr.ru/company/xakep/blog/189210", "_self")

password123Password

heroku logs --tail --app air-drone

java -classpath jooq-3.8.5.jar:jooq-meta-3.8.5.jar:jooq-codegen-3.8.5.jar:mysql-connector-java-5.1.40-bin.jar:. org.jooq.util.GenerationTool library.xml

heroku pg:psql --app app_name DATABASE < schema.sql

create TABLE airdrone.Rating( idRating SERIAL NOT NULL, email VARCHAR(100) references airdrone.User(email) ON DELETE CASCADE NOT NULL, rating int DEFAULT 0 );


create TABLE airdrone.User( idUser SERIAL NOT NULL, email VARCHAR(100) PRIMARY KEY NOT NULL, password VARCHAR(100) NOT NULL, username VARCHAR(100), rating INT DEFAULT 0 );

___________________________________________________________________

org.eclipse.ui

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.40</version>
        </dependency>



#mysql
#spring.main.banner-mode=off
#spring.datasource.url=jdbc:mysql://localhost:3307/forum
#spring.datasource.username=root
##spring.datasource.password=
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#Postgress
spring.main.banner-mode=off
spring.datasource.url=jdbc:postgresql://ec2-54-247-127-6.eu-west-1.compute.amazonaws.com:5432/dfjhvf4usfa081?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
spring.datasource.username=gfnmyoepyvygkd
spring.datasource.password=Yg4pQ7h2bfD2RfidE5JvDeNRAu
spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.tomcat.max-wait=10000
spring.datasource.tomcat.max-active=15
spring.datasource.tomcat.max-idle=10
spring.datasource.tomcat.min-idle=5
spring.datasource.tomcat.test-on-borrow=true
spring.jooq.sql-dialect=postgres

#localmachine
#server settings
#server.port = 9090
#server.address = 127.0.0.1

___________________________________________________________________

https://www.youtube.com/watch?v=DNC6Lknn2AE

http://agentlab.ru/p2/orbit/missing-swt-fragments/

IStorage storage = StorageFactory.DEFAULT.create("pDKTqBfDuNxlAKydhEwxBZPxa4q");
            IBlob blob = storage.getBlob("ui_test");
            IStorageService s = REGISTRY.getServices()[1];
            blob.getStorage().setService(s);

            InputStream inputstream = new FileInputStream("/Users/admin/Desktop/test_file/little.file");
            blob.setContents(inputstream);

____________________________________________


admin@MacBook-Pro-Dmitrij:~/Work/MailRu/2_semester/db/technopark-db-api/tests$ python perf_test.py -l -v --address=127.0.0.1:5000

                Started for: {'filled_up': False, 'ip': '127.0.0.1:5000', 'slug': 'me', 'passed': True, 'email': 's.stupnikov@corp.mail.ru'}

Requesting http://localhost:5000/db/api/clear/ with {} (POST=True)
Request time was: 0.0236 sec
Requesting http://localhost:5000/db/api/user/create/ with {'username': u'dcf1xr', 'about': u'u1itwa g0kxuzm 56a18i tgx1ohwlp ega3fz1v sc03lvyp2 9w5 8v9rxu6 uz2nlbey wqmhlk4d0 rps0mkt9gc 37 eqxorkp2a ai6w70 lc mivcbuw2kd tz1c7 dn7ew8zug5 wf8qgzvt01 ogdxku8fwg', 'isAnonymous': False, 'name': u'i47grkeqhv 6uhvexaf8 fc3', 'email': u'gvqxn4aikw@bk.ru'} (POST=True)
Request time was: 0.0161 sec
Requesting http://localhost:5000/db/api/forum/create/ with {'shortName': u'sudiqw', 'name': u'32g0m578k 4dgapu', 'user': u'gvqxn4aikw@bk.ru'} (POST=True)
Request time was: 0.0167 sec
Requesting http://localhost:5000/db/api/thread/create/ with {'forum': u'sudiqw', 'title': u'l0rm zvw5 m4zg8r13l', 'isClosed': True, 'user': u'gvqxn4aikw@bk.ru', 'date': '2013-07-02 05:19:03', 'message': u'205m uqifs9ac3 trpa75m43 tg75 bq 8x6 yl6h92xig0 ygf9287 z3 2cw 6189 c3i5unvh 80ghaibm ow egzsq02 lci o4 t4p0l t2oi8escv4 eng te98gy g31doz8 hp1tm0r gyu pz56hv19u h9s6d8w7uq', 'slug': u'17kv5r', 'isDeleted': True} (POST=True)
Request time was: 0.0121 sec
Requesting http://localhost:5000/db/api/post/create/ with {'parent': None, 'forum': u'sudiqw', 'thread': 2189, 'isApproved': True, 'isDeleted': False, 'isEdited': True, 'date': '2013-11-23 21:39:42', 'message': 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam a lorem a leo porttitor tincidunt eget et urna. Aenean id lacinia dolor. Sed consequat ipsum at orci porta, sed condimentum dui elementum. Curabitur magna purus, sagittis in convallis ultrices, dignissim pharetra ipsum. In molestie, arcu id convallis blandit, felis metus suscipit justo, ut iaculis metus leo viverra felis. Donec a varius dolor. Cras tempor, nisl in dapibus cursus, risus ligula ultricies nisi, a sagittis justo lorem et odio. Mauris eu scelerisque tellus. Duis luctus enim vel porttitor convallis. Phasellus pretium mi vitae ullamcorper pretium. Vivamus sollicitudin, risus a volutpat condimentum', 'isSpam': False, 'isHighlighted': False, 'user': u'gvqxn4aikw@bk.ru'} (POST=True)
Request time was: 0.0128 sec
{u'code': 3, u'response': u'\u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441'}
Traceback (most recent call last):
  File "perf_test.py", line 565, in <module>
    Filler.run()
  File "perf_test.py", line 448, in run
    factory(entities)
  File "perf_test.py", line 295, in create
    state.add_post(response)
  File "perf_test.py", line 428, in add_post
    self.posts.append(p['id'])
KeyError: 'id'
______________________________________________
python perf_test.py -l -v --address=127.0.0.1:5000


___________________________________________________
High Lounge
_________________________________________________
g++ -shared -o crypt.so -fPIC -I /Library/Java/JavaVirtualMachines/jdk1.8.0_51.jdk/Contents/Home/include -I /Library/Java/JavaVirtualMachines/jdk1.8.0_51.jdk/Contents/Home/include/darwin  main.cpp

_______________________
Dmitry Zagrebaev <zagd@1c.ru>
________________________________________
SELECT `forum`.`User`.`idUser`, 
		`forum`.`User`.`username`, 
		`forum`.`User`.`about`, 
		`forum`.`User`.`name`, 
        group_concat(`forum`.`Followers`.`follower`) as follower,
        `forum`.`User`.`isAnonymous`  
FROM `forum`.`User`  
LEFT JOIN `forum`.`Followers` on
 `forum`.`User`.`email`='example@mail.ru' AND `forum`.`User`.`email` = `forum`.`Followers`.`followee`;
_______________________________________________________________________

SELECT `forum`.`User`.`idUser`, 
		`forum`.`User`.`username`, 
		`forum`.`User`.`about`, 
		`forum`.`User`.`name`, 
        `forum`.`User`.`email`,
        -- `forum`.`Followers`.`follower`,
         group_concat(Followers.`follower`) as followers,
         group_concat(distinct Followee.`followee`) as followee,
        `forum`.`User`.`isAnonymous`  
FROM `forum`.`User`  
LEFT JOIN `forum`.`Followers` as Followers on
  `forum`.`User`.`email` = Followers.`followee`
  
LEFT JOIN `forum`.`Followers` as Followee on 
  `forum`.`User`.`email` = Followee.`follower`
  
group by `forum`.`User`.`email`;

______________________________________________________________________

SELECT `forum`.`User`.`idUser`, 
		`forum`.`User`.`username`, 
		`forum`.`User`.`about`, 
		`forum`.`User`.`name`, 
        `forum`.`User`.`email`,
         group_concat(Followers.`follower`) as followers,
         group_concat(distinct Followee.`followee`) as followee,
         group_concat(distinct `forum`.`ThreadSubscribe`.`thread`) as subscriptions,
        `forum`.`User`.`isAnonymous`  
FROM `forum`.`User`
LEFT JOIN `forum`.`Followers` as Followers on
  `forum`.`User`.`email` = Followers.`followee`
  
LEFT JOIN `forum`.`Followers` as Followee on 
  `forum`.`User`.`email` = Followee.`follower`
  
LEFT JOIN `forum`.`ThreadSubscribe` ON 
	`forum`.`User`.`email` = `forum`.`ThreadSubscribe`.`user`
  
  where `forum`.`User`.`email`='example@mail.ru'
  
group by `forum`.`User`.`email`;
_________________________________________________________________________












2016-11-30T01:32:37.077915Z 1 [Note] A temporary password is generated for root@localhost: yj<kFby9B2RG

If you lose this password, please consult the section How to Reset the Root Password in the MySQL reference manual.
__________________________

root 123 
mysql 5.7
___________ 


tpadmin@student.bmstu.cloud:10120


memlock

innodb_buffer_pool_size = 450M

_____________
@RestController
public class StatisticController {

    private final AccountService accountService;
    private final SessionService sessionService;

    @Autowired
    public StatisticController(AccountService accountService,
                               SessionService sessionService) {
        this.accountService = accountService;
        this.sessionService = sessionService;
    }

    @RequestMapping(path = "/user/rating", method = RequestMethod.GET,
            produces = "application/json")
    public ResponseEntity getWinRate(HttpSession httpSession) {

        final String email = sessionService.getAuthorizedEmail(httpSession.getId());

        if(email == null)
            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(new ResultJson<>(
                    HttpStatus.UNAUTHORIZED.value(), HttpStatus.UNAUTHORIZED).getStringResult());

        UserProfile userProfile = accountService.getUser(email);

        Float winRate = (float)userProfile.getWinGames() / userProfile.getCountGames();

        final String json = (new ResultJson<>(
                HttpStatus.OK.value(), winRate.floatValue()).getStringResult());

        return ResponseEntity.status(HttpStatus.OK).body(json);
    }

}

____________________


    @Override
    public Float getWinRate(UserProfile userProfile) {

        if(userProfile == null || userProfile.getEmail() == null)
            return null;

        return (float)userProfile.getCountGames() / userProfile.getWinGames();
    }

______________________

 public static List<Parameter> create(
            Class concreteClass,
            Class declaringClass,
            Method javaMethod,
            boolean keepEncoded) {
_________________
this.parameters = Collections.unmodifiableList(Parameter.create(
                handlerClass, definitionMethod.getDeclaringClass(), definitionMethod, encodedParameters));

___________________
Invocable(handler, definitionMethod, handlingMethod, encodedParameters, routingResponseType);
_______________________
 Invocable.create(handler, definitionMethod, handlingMethod, encodedParams, routingResponseType);
_________


<dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <scope>runtime</scope>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>com.googlecode.concurrentlinkedhashmap</groupId>
            <artifactId>concurrentlinkedhashmap-lru</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <scope>test</scope>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>

        <dependency>
            <scope>test</scope>
            <groupId>net.sf.extjwnl</groupId>
            <artifactId>extjwnl-data-wn31</artifactId>
            <version>1.2</version>
        </dependency>

        <dependency>
            <scope>test</scope>
            <groupId>com.tngtech.java</groupId>
            <artifactId>junit-dataprovider</artifactId>
            <version>1.10.1</version>
        </dependency>

        <dependency>
            <scope>test</scope>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
        </dependency>
    </dependencies>
______________________
UTILITIES

<dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <scope>runtime</scope>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>net.sf.extjwnl</groupId>
            <artifactId>extjwnl</artifactId>
            <version>1.9.2-SNAPSHOT</version>
        </dependency>

        <dependency>
            <scope>test</scope>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>

        <dependency>
            <scope>test</scope>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.187</version>
        </dependency>

        <dependency>
            <scope>runtime</scope>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.35</version>
        </dependency>

        <dependency>
            <scope>runtime</scope>
            <groupId>net.sf.extjwnl</groupId>
            <artifactId>extjwnl-data-wn31</artifactId>
            <version>1.2</version>
        </dependency>

        <dependency>
            <scope>runtime</scope>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.4-1201-jdbc41</version>
        </dependency>

    </dependencies>
___________________________________________________

docker build -t webserver-image:v1 .
docker run -d -p 8070:80 webserver-image:v1



version: '2'

services:
  postgres:
    image: postgres
    restart: always
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - data:/var/lib/postgres/data
    environment:
      POSTGRES_USER: guacamole_user
      POSTGRES_PASSWORD: some_password
      POSTGRES_DB: guacamole_db
    networks:
      - guac
  guacd:
    image: glyptodon/guacd
    restart: always
    ports:
      - "4822:4822"
    networks:
      - guac
  guac:
    image: glyptodon/guacamole
    restart: always
    ports:
      - "8080:8080"
    environment:
      POSTGRES_HOSTNAME: postgres
      POSTGRES_DATABASE: guacamole_db
      POSTGRES_USER: guacamole_user
      POSTGRES_PASSWORD: some_password
      GUACD_PORT_4822_TCP_ADDR: guacd
      GUACD_PORT_4822_TCP_PORT: 4822
      GUACD_HOSTNAME: guacd
    networks:
      - guac
    depends_on:
      - postgres
      - guacd
    links:
       - postgres
       - guacd

volumes:
  data:
    driver: local

networks:
  guac:
    driver: bridge





